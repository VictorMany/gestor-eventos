service: event-manager-app

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: dev
  memorySize: 128
  timeout: 10
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Scan
            - dynamodb:Query
          Resource:
            - arn:aws:dynamodb:us-east-1:*:table/users
            - arn:aws:dynamodb:us-east-1:*:table/users/index/email-index
            - arn:aws:dynamodb:us-east-1:*:table/vendors
            - arn:aws:dynamodb:us-east-1:*:table/vendors/index/category-index
            - arn:aws:dynamodb:us-east-1:*:table/vendors/index/name-index
            - arn:aws:dynamodb:us-east-1:*:table/venues
            - arn:aws:dynamodb:us-east-1:*:table/venues/index/city-index
            - arn:aws:dynamodb:us-east-1:*:table/venues/index/name-index
            - arn:aws:dynamodb:us-east-1:*:table/quotes
            - arn:aws:dynamodb:us-east-1:*:table/quotes/index/clientId-index
            - arn:aws:dynamodb:us-east-1:*:table/quotes/index/vendorId-index
            - arn:aws:dynamodb:us-east-1:*:table/quotes/index/venueId-index
  environment:
    USERS_TABLE: users
    VENDORS_TABLE: vendors
    VENUES_TABLE: venues
    QUOTES_TABLE: quotes

functions:
  # Users
  createUser:
    handler: functions/users/createUser.handler
    events:
      - http:
          path: users
          method: post

  getUserById:
    handler: functions/users/getUserById.handler
    events:
      - http:
          path: users/{id}
          method: get

  listUsers:
    handler: functions/users/listUsers.handler
    events:
      - http:
          path: users
          method: get

  updateUser:
    handler: functions/users/updateUser.handler
    events:
      - http:
          path: users/{id}
          method: put

  deleteUser:
    handler: functions/users/deleteUser.handler
    events:
      - http:
          path: users/{id}
          method: delete

  getUserByEmail:
    handler: functions/users/getUserByEmail.handler
    events:
      - http:
          path: users/by-email
          method: get

  # Vendors
  createVendor:
    handler: functions/vendors/createVendor.handler
    events:
      - http:
          path: vendors
          method: post

  getVendorById:
    handler: functions/vendors/getVendorById.handler
    events:
      - http:
          path: vendors/{id}
          method: get

  listVendors:
    handler: functions/vendors/listVendors.handler
    events:
      - http:
          path: vendors
          method: get

  updateVendor:
    handler: functions/vendors/updateVendor.handler
    events:
      - http:
          path: vendors/{id}
          method: put

  deleteVendor:
    handler: functions/vendors/deleteVendor.handler
    events:
      - http:
          path: vendors/{id}
          method: delete

  getVendorByName:
    handler: functions/vendors/getVendorByName.handler
    events:
      - http:
          path: vendors/by-name
          method: get

  getVendorByCategory:
    handler: functions/vendors/getVendorByCategory.handler
    events:
      - http:
          path: vendors/by-category
          method: get

  # Venues
  createVenue:
    handler: functions/venues/createVenue.handler
    events:
      - http:
          path: venues
          method: post

  getVenueById:
    handler: functions/venues/getVenueById.handler
    events:
      - http:
          path: venues/{id}
          method: get

  listVenues:
    handler: functions/venues/listVenues.handler
    events:
      - http:
          path: venues
          method: get

  updateVenue:
    handler: functions/venues/updateVenue.handler
    events:
      - http:
          path: venues/{id}
          method: put

  deleteVenue:
    handler: functions/venues/deleteVenue.handler
    events:
      - http:
          path: venues/{id}
          method: delete

  getVenueByCity:
    handler: functions/venues/getVenueByCity.handler
    events:
      - http:
          path: venues/by-city
          method: get

  getVenueByName:
    handler: functions/venues/getVenueByName.handler
    events:
      - http:
          path: venues/by-name
          method: get

  # Quotes
  createQuote:
    handler: functions/quotes/createQuote.handler
    events:
      - http:
          path: quotes
          method: post

  getQuoteById:
    handler: functions/quotes/getQuoteById.handler
    events:
      - http:
          path: quotes/{id}
          method: get

  listQuotes:
    handler: functions/quotes/listQuotes.handler
    events:
      - http:
          path: quotes
          method: get

  updateQuote:
    handler: functions/quotes/updateQuote.handler
    events:
      - http:
          path: quotes/{id}
          method: put

  deleteQuote:
    handler: functions/quotes/deleteQuote.handler
    events:
      - http:
          path: quotes/{id}
          method: delete

  getQuotesByClientId:
    handler: functions/quotes/getQuotesByClientId.handler
    events:
      - http:
          path: quotes/by-client
          method: get

  getQuotesByVendorId:
    handler: functions/quotes/getQuotesByVendorId.handler
    events:
      - http:
          path: quotes/by-vendor
          method: get

  getQuotesByVenueId:
    handler: functions/quotes/getQuotesByVenueId.handler
    events:
      - http:
          path: quotes/by-venue
          method: get

resources:
  Resources:
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: email-index
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    VendorsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: vendors
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: category
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: category-index
            KeySchema:
              - AttributeName: category
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: name-index
            KeySchema:
              - AttributeName: name
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    VenuesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: venues
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: city
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: city-index
            KeySchema:
              - AttributeName: city
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: name-index
            KeySchema:
              - AttributeName: name
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    QuotesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: quotes
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: clientId
            AttributeType: S
          - AttributeName: vendorId
            AttributeType: S
          - AttributeName: venueId
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: clientId-index
            KeySchema:
              - AttributeName: clientId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: vendorId-index
            KeySchema:
              - AttributeName: vendorId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: venueId-index
            KeySchema:
              - AttributeName: venueId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
